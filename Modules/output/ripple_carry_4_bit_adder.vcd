$date
	Sat Sep 28 03:10:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_ripple_carry_4_bit_adder $end
$var wire 4 ! S [3:0] $end
$var wire 1 " C4 $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C0 $end
$scope module RC4bA $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % C_0 $end
$var wire 4 ( SUM [3:0] $end
$var wire 1 " C_4 $end
$var wire 1 ) C_3 $end
$var wire 1 * C_2 $end
$var wire 1 + C_1 $end
$scope module FA0 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 % C_in $end
$var wire 1 . S $end
$var wire 1 / P $end
$var wire 1 0 G $end
$var wire 1 + C_out $end
$scope module hf1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 0 C $end
$var wire 1 / S $end
$upscope $end
$scope module hf2 $end
$var wire 1 / A $end
$var wire 1 % B $end
$var wire 1 + C $end
$var wire 1 . S $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 + C_in $end
$var wire 1 3 S $end
$var wire 1 4 P $end
$var wire 1 5 G $end
$var wire 1 * C_out $end
$scope module hf1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 5 C $end
$var wire 1 4 S $end
$upscope $end
$scope module hf2 $end
$var wire 1 4 A $end
$var wire 1 + B $end
$var wire 1 * C $end
$var wire 1 3 S $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 * C_in $end
$var wire 1 8 S $end
$var wire 1 9 P $end
$var wire 1 : G $end
$var wire 1 ) C_out $end
$scope module hf1 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 : C $end
$var wire 1 9 S $end
$upscope $end
$scope module hf2 $end
$var wire 1 9 A $end
$var wire 1 * B $end
$var wire 1 ) C $end
$var wire 1 8 S $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 ) C_in $end
$var wire 1 = S $end
$var wire 1 > P $end
$var wire 1 ? G $end
$var wire 1 " C_out $end
$scope module hf1 $end
$var wire 1 ; A $end
$var wire 1 < B $end
$var wire 1 ? C $end
$var wire 1 > S $end
$upscope $end
$scope module hf2 $end
$var wire 1 > A $end
$var wire 1 ) B $end
$var wire 1 " C $end
$var wire 1 = S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0?
0>
0=
0<
0;
0:
19
18
17
06
05
14
13
12
01
10
0/
0.
1-
1,
0+
0*
0)
b110 (
b111 '
b1 &
0%
b111 $
b1 #
0"
b110 !
$end
#20
03
b0 !
b0 (
08
04
09
02
07
b1 $
b1 '
#250
